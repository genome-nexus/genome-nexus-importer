name: Docker Image CI
on:
  push:
    branches: 
      - master
      - demo-*
  pull_request:
# Only use GitHub Actions for testing, because the Docker image with Mutation Assessor data is too big to be built and pushed.
# CircleCI builds and pushes the images to Docker Hub for every new release.
jobs:
  build_and_test_grch37:
    if: github.repository == 'genome-nexus/genome-nexus-importer'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - REF_ENSEMBL_VERSION: grch37_ensembl92
            MUTATIONASSESSOR: false
          - REF_ENSEMBL_VERSION: grch37_ensembl92
            MUTATIONASSESSOR: true
    steps:
      - name: 'Checkout git repo'
        uses: actions/checkout@v1
      - name: 'Docker build with cache'
        uses: whoan/docker-build-with-cache-action@v5
        with:
          image_name: genomenexus/gn-mongo
          image_tag: latest-${{ matrix.REF_ENSEMBL_VERSION }}-mutation_assessor_${{ matrix.MUTATIONASSESSOR }}
          build_args: |
            ARG_REF_ENSEMBL_VERSION=${{ matrix.REF_ENSEMBL_VERSION }}
            MUTATIONASSESSOR=${{ matrix.MUTATIONASSESSOR }}
          push_image_and_stages: false
      - name: Run container and capture environment variables
        run: |
          # Run the container overriding the default entrypoint to simply print environment variables.
          docker run --rm --entrypoint env genomenexus/gn-mongo:latest-${{ matrix.REF_ENSEMBL_VERSION }}-${{ matrix.MUTATIONASSESSOR }} > env_output.txt
          echo "Environment variables from container:"
          cat env_output.txt
      - name: Verify environment variables
        run: |
          if ! grep -q "REF_ENSEMBL_VERSION=${{ matrix.REF_ENSEMBL_VERSION }}" env_output.txt; then
            echo "Error: REF_ENSEMBL_VERSION is not set correctly. Expected: '${{ matrix.REF_ENSEMBL_VERSION }}'"
            exit 1
          fi
          if ! grep -q "MUTATIONASSESSOR=${{ matrix.MUTATIONASSESSOR }}" env_output.txt; then
            echo "Error: MUTATIONASSESSOR is not set correctly. Expected: '${{ matrix.MUTATIONASSESSOR }}'"
            exit 1
          fi
  
  # build_and_publish_grch38:
  #   if: github.repository == 'genome-nexus/genome-nexus-importer'
  #   runs-on: ubuntu-latest
  #   env:
  #     Version: grch38_ensembl95
  #   steps:
  #     - name: 'Checkout git repo'
  #       uses: actions/checkout@v1
  #     - name: Extract branch or tag name
  #       # The GITHUB_REF variable is like "refs/head/branch_name"
  #       # The format of image tag is e.g. v0.12_grch38_ensembl95
  #       run: echo "##[set-output name=image_tag_name;]${GITHUB_REF##*/}_${Version}"
  #       id: extract_tag
  #     - name: 'Docker build with cache'
  #       uses: whoan/docker-build-with-cache-action@v5
  #       with:
  #         build_extra_args: '{"--build-arg": "ARG_REF_ENSEMBL_VERSION=grch38_ensembl95"}'
  #         image_name: genomenexus/gn-mongo
  #         image_tag: ${{ steps.extract_tag.outputs.image_tag_name }}
  #         push_image_and_stages: false

  # build_and_publish_grcm38:
  #   if: github.repository == 'genome-nexus/genome-nexus-importer'
  #   runs-on: ubuntu-latest
  #   env:
  #     Version: grcm38_ensembl95
  #   steps:
  #     - name: 'Checkout git repo'
  #       uses: actions/checkout@v1
  #     - name: Extract branch or tag name
  #       # The GITHUB_REF variable is like "refs/head/branch_name"
  #       # The format of image tag is e.g. v0.12_grch38_ensembl95
  #       run: echo "##[set-output name=image_tag_names;]$(echo ${GITHUB_REF##*/}_${Version})"
  #       id: extract_tags
  #     - name: 'Docker build with cache'
  #       uses: whoan/docker-build-with-cache-action@v5
  #       with:
  #         build_extra_args: '--build-arg SPECIES=mus_musculus --build-arg REF_ENSEMBL_VERSION=grcm38_ensembl95'
  #         image_name: genomenexus/gn-mongo
  #         image_tag: ${{ steps.extract_tags.outputs.image_tag_names }}
  #         push_image_and_stages: false
          
